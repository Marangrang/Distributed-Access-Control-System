name: CD - Build, Publish and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: serve/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}
          platforms: linux/amd64,linux/arm64

  deploy:
    needs: build-and-publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Rsync repo to server
        run: |
          rsync -avz --exclude '.git' . ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/face-verification/

      - name: Write environment file remotely
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
            cat > /opt/face-verification/.env << EENV
APP_ENV=production
APP_DEBUG=false

DB_HOST=${{ secrets.DB_HOST }}
DB_PORT=5432
DB_NAME=${{ secrets.DB_NAME }}
DB_USER=${{ secrets.DB_USER }}
DB_PASSWORD=${{ secrets.DB_PASSWORD }}
DB_SSL_MODE=disable

MINIO_ENDPOINT=${{ secrets.MINIO_ENDPOINT }}
MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}
MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }}
MINIO_BUCKET=faiss-index
MINIO_REGION=us-east-1
MINIO_SECURE=true

FAISS_INDEX_PATH=/data/faiss_index
EMBEDDING_DIM=768
EMBEDDING_DTYPE=float16

UVICORN_HOST=0.0.0.0
UVICORN_PORT=8000
UVICORN_WORKERS=2
LOG_LEVEL=info

JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
JWT_EXPIRY_HOURS=12

DATA_DIR=/opt/face-verification/data
LOG_DIR=/opt/face-verification/logs
EENV
          EOF

      - name: Remote deploy (Docker Compose)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
            cd /opt/face-verification
            docker compose pull || true
            docker compose down || true
            docker compose up -d --build
          EOF